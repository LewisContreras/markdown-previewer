{"version":3,"sources":["App.js","index.js"],"names":["App","useState","setPreview","textRef","useRef","useEffect","previewHtml","document","getElementById","current","value","innerHTML","marked","id","ref","defaultValue","onChange","e","target","ReactDOM","render"],"mappings":"4NAoFeA,MAlCf,WAAgB,IAAD,EAGiBC,mBAAS,IAH1B,mBAGGC,GAHH,WAKPC,EAAUC,kBAAO,GAiBvB,OAfAC,qBAAU,WACR,IAAIC,EAAcC,SAASC,eAAe,WAE1CN,EAAWC,EAAQM,QAAQC,OAC3BJ,EAAYK,UAAYC,IAAOT,EAAQM,QAAQC,SAC/C,IAWA,sBAAKG,GAAG,YAAR,UACE,0BAAUC,IAAKX,EAASY,aAtEb,qmCAsEwCC,SAVlC,SAACC,GACpB,IAAIX,EAAcC,SAASC,eAAe,WAC1CN,EAAWe,EAAEC,OAAOR,OACpBJ,EAAYK,UAAYC,IAAOK,EAAEC,OAAOR,QAOqCG,GAAG,WAK9E,qBAAKA,GAAG,gBC3EdM,IAASC,OACL,cAAC,EAAD,IACFb,SAASC,eAAe,W","file":"static/js/main.837d8438.chunk.js","sourcesContent":["import marked from 'marked';\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\n\nconst defaultText = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n\n\nfunction App() {\n  \n  \n  const [preview, setPreview] = useState(\"\")\n\n  const textRef = useRef(false)\n\n  useEffect(() => {\n    let previewHtml = document.getElementById(\"preview\")\n    \n    setPreview(textRef.current.value)\n    previewHtml.innerHTML = marked(textRef.current.value)\n  },[])\n\n  const handleChange = (e) =>{\n    let previewHtml = document.getElementById(\"preview\")\n    setPreview(e.target.value)\n    previewHtml.innerHTML = marked(e.target.value)\n  }\n\n\n\n  return (\n    <div id=\"container\" >\n      <textarea ref={textRef} defaultValue={defaultText} onChange={handleChange} id=\"editor\" >\n      \n\n\n      </textarea>\n      <div id=\"preview\" ></div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}